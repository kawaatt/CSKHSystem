// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250221061321_updatedb")]
    partial class updatedb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.CSKHAuto.BOAccount", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CheckAccountFilters");
                });

            modelBuilder.Entity("API.Models.CSKHAuto.TicketCategory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TicketCategories");

                    b.HasData(
                        new
                        {
                            ID = new Guid("750714d6-dcef-404f-b6c0-cc1ae9baf9d9"),
                            CategoryName = "MÃ VÉ CƯỢC",
                            IsActive = true,
                            System = "F168"
                        },
                        new
                        {
                            ID = new Guid("663acba9-866e-4799-9bd5-c32c2d2705c2"),
                            CategoryName = "ĐƠN NẠP TIỀN",
                            IsActive = true,
                            System = "F168"
                        },
                        new
                        {
                            ID = new Guid("8d31ec4e-7358-40fc-80eb-15713970f2c5"),
                            CategoryName = "ĐƠN RÚT TIỀN",
                            IsActive = true,
                            System = "F168"
                        },
                        new
                        {
                            ID = new Guid("91a4d714-2729-4971-8b76-ac6220908e0b"),
                            CategoryName = "SỬA THÔNG TIN",
                            IsActive = true,
                            System = "F168"
                        },
                        new
                        {
                            ID = new Guid("572b9965-52cc-4815-afb7-b3f589bb7dd5"),
                            CategoryName = "KHUYẾN MÃI",
                            IsActive = true,
                            System = "F168"
                        },
                        new
                        {
                            ID = new Guid("bb8d5cc2-598e-47ee-9793-ea48ffef1a3c"),
                            CategoryName = "VẤN ĐỀ KHÁC",
                            IsActive = true,
                            System = "F168"
                        });
                });

            modelBuilder.Entity("API.Models.CSKHAuto.TicketHistory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketRequestID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TicketStatusDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TicketStatusTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TicketStatusValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketRequestID");

                    b.ToTable("TicketHistories");
                });

            modelBuilder.Entity("API.Models.CSKHAuto.TicketRequest", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketCategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TicketContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ID");

                    b.HasIndex("TicketCategoryID");

                    b.ToTable("TicketRequests");
                });

            modelBuilder.Entity("API.Models.CSKHAuto.TicketHistory", b =>
                {
                    b.HasOne("API.Models.CSKHAuto.TicketRequest", "TicketRequest")
                        .WithMany("TicketHistories")
                        .HasForeignKey("TicketRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketRequest");
                });

            modelBuilder.Entity("API.Models.CSKHAuto.TicketRequest", b =>
                {
                    b.HasOne("API.Models.CSKHAuto.TicketCategory", "TicketCategory")
                        .WithMany()
                        .HasForeignKey("TicketCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketCategory");
                });

            modelBuilder.Entity("API.Models.CSKHAuto.TicketRequest", b =>
                {
                    b.Navigation("TicketHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
